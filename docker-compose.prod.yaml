services:
  nestjs-app-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: znovandap/wz-nestjs-app-prod:1.0.0
    ports:
      - "${PORT:-3001}:3001"
    networks:
      - wz_nestjs_prod
    depends_on:
      - postgres-db-prod
      - redis-prod
    command: >
          sh -c "npm run migration:run &&
          npm run start:prod"
    environment:
      - "PORT=${PORT:-3001}"
      - "PREFIX=${PREFIX:-api}"
      - "VERSION=${VERSION:-v1}"
      # Database
      - "DB_HOST=${DB_HOST:-postgres-db-prod}"
      - "DB_PORT=${DB_PORT:-5432}"
      - "DB_ROOT_PASSWORD=${DB_ROOT_PASSWORD:-wz_nestjs_prod}"
      - "DB_USERNAME=${DB_USERNAME:-wz_nestjs_prod}"
      - "DB_PASSWORD=${DB_PASSWORD:-wz_nestjs_prod}"
      - "DB_NAME=${DB_NAME:-wz_nestjs_prod}"
      - "DB_SYNCHRONIZE=${DB_SYNCHRONIZE:-false}"
      - "DB_LOGGING=${DB_LOGGING:-true}"
      - "DB_DROP_SCHEMA=${DB_DROP_SCHEMA:-true}"
      # Redis
      - "REDIS_HOST=${REDIS_HOST:-redis-prod}"
      - "REDIS_PORT=${REDIS_PORT:-6379}"
      - "REDIS_PASSWORD=${REDIS_PASSWORD:-wz_nestjs_prod}"
      - "REDIS_DB=${REDIS_DB:-0}"
      # Other
      - "JWT_SECRET=b67iccqEd2NzED7EhqSTwzPSmI7dOzDKLpvr5MlZRY"
    
  postgres-db-prod:
    image: postgres:14
    restart: always
    ports:
      - "${DB_PORT:-5433}:5432"
    environment:
      - "POSTGRES_USER=${DB_USERNAME:-wz_nestjs_prod}"
      - "POSTGRES_PASSWORD=${DB_PASSWORD:-wz_nestjs_prod}"
      - "POSTGRES_DB=${DB_NAME:-wz_nestjs_prod}"
    volumes:
      - wz_nestjs_prod_db:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - wz_nestjs_prod

  redis-prod:
    image: redis:latest
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD:-wz_nestjs_prod}
    ports:
      - "${REDIS_PORT:-6370}:6379"
    networks:
      - wz_nestjs_prod
    volumes:
      - wz_nestjs_prod_redis:/data

volumes:
  wz_nestjs_prod_db:
  wz_nestjs_prod_redis:

networks:
  wz_nestjs_prod:
    driver: bridge